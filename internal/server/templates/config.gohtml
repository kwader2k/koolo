<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="color-scheme" content="light dark"/>
    <link rel="stylesheet" href="../assets/css/pico.min.css">
    <link rel="stylesheet" href="../assets/css/custom.css">
    <title>Koolo Settings</title>
    <style>
        :root {
            /* Primary Colors */
            --primary: #0089eb;
            --primary-hover: #1b9bf7;
            --primary-light: #dcf2ff;
            
            /* Accent Colors */
            --accent-pink: #ff758a;
            --accent-purple: #e391db;
            --accent-blue: #758eff;
            --accent-blue-bright: #1a5bff;
            --accent-yellow: #cbc026;
            --accent-orange: #f5ab00;
            --accent-green: #3dba69;
            --accent-lime: #a0b61f;
            
            /* Background Colors */
            --bg-primary: #1a1d24;
            --bg-secondary: #22262e;
            --bg-tertiary: #2a2f38;
            --bg-hover: #32363f;
            --bg-elevated: #2d323c;
            
            /* Text Colors */
            --text-primary: #ffffff;
            --text-secondary: #a0a0a0;
            --text-muted: #666666;
            --text-dim: #4a4a4a;
            
            /* Border & Shadows */
            --border-color: #424549;
            --border-subtle: rgba(255, 255, 255, 0.08);
            --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.2);
            --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.25);
            --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.3);
            --shadow-xl: 0 12px 24px rgba(0, 0, 0, 0.4);
            --glow-primary: 0 0 20px rgba(0, 137, 235, 0.3);
            
            /* Transitions */
            --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
            --transition-normal: 250ms cubic-bezier(0.4, 0, 0.2, 1);
            --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);
            
            /* Spacing */
            --spacing-xs: 4px;
            --spacing-sm: 8px;
            --spacing-md: 16px;
            --spacing-lg: 24px;
            --spacing-xl: 32px;
            
            /* Border Radius */
            --radius-sm: 6px;
            --radius-md: 8px;
            --radius-lg: 12px;
            --radius-xl: 16px;
        }

        body {
            background: linear-gradient(135deg, var(--bg-primary) 0%, #151820 100%);
            min-height: 100vh;
        }

        .notification {
            background: var(--bg-secondary);
            border-radius: var(--radius-xl);
            padding: var(--spacing-xl);
            box-shadow: var(--shadow-lg);
            border: 1px solid var(--border-subtle);
            position: relative;
            overflow: hidden;
        }

        .notification::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--primary);
            box-shadow: var(--glow-primary);
        }

        .notification h2 {
            background: linear-gradient(135deg, var(--primary) 0%, var(--accent-blue) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 800;
            margin-bottom: var(--spacing-lg);
            font-size: 2em;
        }

        .notification h4 {
            color: var(--primary);
            font-weight: 700;
            margin-top: var(--spacing-lg);
            margin-bottom: var(--spacing-md);
            font-size: 1.2em;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .error-message {
            background: linear-gradient(135deg, rgba(255, 117, 138, 0.15) 0%, rgba(220, 53, 69, 0.1) 100%);
            border: 2px solid var(--accent-pink);
            color: #ff9aa5;
            padding: var(--spacing-md);
            border-radius: var(--radius-lg);
            margin-bottom: var(--spacing-lg);
            font-weight: 500;
        }

        fieldset {
            background: var(--bg-tertiary);
            border: 1px solid var(--border-subtle);
            border-radius: var(--radius-lg);
            padding: var(--spacing-lg);
            margin-bottom: var(--spacing-md);
        }

        label {
            color: var(--text-primary);
            font-weight: 500;
        }

        input[type="text"],
        input[type="password"],
        input[type="number"] {
            background: var(--bg-primary);
            border: 2px solid var(--border-color);
            color: var(--text-primary);
            border-radius: var(--radius-md);
            padding: 12px var(--spacing-md);
            transition: all var(--transition-normal);
        }

        input[type="text"]:focus,
        input[type="password"]:focus,
        input[type="number"]:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 4px rgba(0, 137, 235, 0.15);
            outline: none;
        }

        input[type="checkbox"] {
            accent-color: var(--primary);
            width: 18px;
            height: 18px;
            cursor: pointer;
        }

        input[type="submit"] {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-hover) 100%);
            color: var(--text-primary);
            border: none;
            border-radius: var(--radius-lg);
            font-weight: 700;
            cursor: pointer;
            transition: all var(--transition-normal);
            box-shadow: var(--shadow-sm);
        }

        input[type="submit"]:hover {
            box-shadow: var(--glow-primary), var(--shadow-md);
            transform: translateY(-2px);
        }

        input[type="button"].secondary {
            background: var(--bg-tertiary);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
        }

        input[type="button"].secondary:hover {
            background: var(--bg-hover);
            border-color: var(--primary);
        }

        .grid {
            display: grid;
            gap: var(--spacing-md);
        }

        @media (min-width: 768px) {
            fieldset.grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
<main class="container">
    {{ if ne .ErrorMessage "" }}
        <div class="container">
            <div class="row">
                <div class="col">
                    <div class="error-message">
                        {{ .ErrorMessage }}
                    </div>
                </div>
            </div>
        </div>
    {{ end }}
    <div class="notification">
        <h2>Settings</h2>
        <form method="post">
            <fieldset>
                <label>
                    Diablo II Resurrected Path
                    <input
                            name="d2rpath"
                            placeholder="C:\Program Files (x86)\Diablo II Resurrected"
                            value="{{.D2RPath}}"
                    />
                </label>
                <label>
                    Diablo II: LoD 1.13c Path (MUST BE 1.13c, otherwise it won't work)
                    <input
                            name="d2lodpath"
                            placeholder="E:\games\Diablo II"
                            value="{{.D2LoDPath}}"
                    />
                </label>
                <label>
                    Centralized Pickit Path (leave blank if you don't want to use a single location for all pickit files)
                    <input
                            name="centralized_pickit_path"
                            placeholder="E:\games\mypickits"
                            value="{{.CentralizedPickitPath}}"
                    />
                </label>
                <label>
                    <input
                            {{ if .UseCustomSettings }}
                                checked="checked"
                            {{ end }}
                            type="checkbox"
                            name="use_custom_settings"
                            value="true"
                    />
                    Use custom game settings
                </label>
                <label>
                    <input
                            {{ if .GameWindowArrangement }}
                                checked="checked"
                            {{ end }}
                            type="checkbox"
                            name="game_window_arrangement"
                            value="true"
                    />
                    Auto reposition game windows
                </label>
                <h4>Debug</h4>
                <fieldset class="grid">
                    <label>
                        <input
                                {{ if .Debug.Log }}
                                    checked="checked"
                                {{ end }}
                                type="checkbox"
                                name="debug_log"
                                value="true"
                        />
                        Debug mode (better details in logs, more noise)
                    </label>
                    <label>
                        <input
                                {{ if .Debug.Screenshots }}
                                    checked="checked"
                                {{ end }}
                                type="checkbox"
                                name="debug_screenshots"
                                value="true"
                        />
                        Save screenshot on error
                    </label>
                </fieldset>
                <h4>Discord integration</h4>
                <label>
                    <input
                            {{ if .Discord.Enabled }}
                                checked="checked"
                            {{ end }}
                            type="checkbox"
                            name="discord_enabled"
                            value="true"
                    />
                    Enabled (Restart required)
                </label>
                 <input
                        name="discord_admins"
                        placeholder="Discord User IDs who can use bot commands separated by commas"
                        value="{{.Discord.BotAdmins}}"
                />
                <input
                        name="discord_token"
                        placeholder="Token"
                        value="{{.Discord.Token}}"
                />
                <input
                        name="discord_channel_id"
                        placeholder="Channel ID"
                        value="{{ .Discord.ChannelID }}"
                />
                <fieldset class="grid">
                    <label>
                        <input type="checkbox" name="enable_game_created_messages" value="{{ .Discord.EnableGameCreatedMessages }}" {{ if .Discord.EnableGameCreatedMessages }} checked="checked" {{ end }} />
                        Enable Game Create Messages
                    </label>
                    <label>
                        <input type="checkbox" name="enable_new_run_messages" value="{{ .Discord.EnableNewRunMessages }}" {{ if .Discord.EnableNewRunMessages }} checked="checked" {{ end }} />
                        Enable New Run Messages
                    </label>
                    <label>
                        <input type="checkbox" name="enable_run_finish_messages" value="{{ .Discord.EnableRunFinishMessages }}" {{ if .Discord.EnableRunFinishMessages }} checked="checked" {{ end }} />
                        Enable Run Finish Messages
                    </label>
                    <label>
                        <input type="checkbox" name="enable_discord_chicken_messages" value="{{ .Discord.EnableDiscordChickenMessages }}" {{ if .Discord.EnableDiscordChickenMessages }} checked="checked" {{ end }} />
                        Enable Chicken/Death Messages
                    </label>
                    <label>
                        <input type="checkbox" name="enable_discord_error_messages" value="{{ .Discord.EnableDiscordErrorMessages }}" {{ if .Discord.EnableDiscordErrorMessages }} checked="checked" {{ end }} />
                        Enable Error Messages
                    </label>
                </fieldset>
                <h4>Telegram integration</h4>
                <label>
                    <input
                            {{ if .Telegram.Enabled }}
                                checked="checked"
                            {{ end }}
                            type="checkbox"
                            name="telegram_enabled"
                            value="true"
                    />
                    Enabled (Restart required)
                </label>
                <input
                        name="telegram_token"
                        placeholder="Token"
                        value="{{.Telegram.Token}}"
                />
                <input
                        name="telegram_chat_id"
                        placeholder="Chat ID"
                        value="{{ .Telegram.ChatID }}"
                />
            </fieldset>
            <fieldset class="grid">
                {{ if not .FirstRun }}
                    <a href="/"><input type="button" value="Cancel" class="secondary"/></a>
                {{ end }}
                <input type="submit" value="Save"/>
            </fieldset>
        </form>
    </div>
</main>
</body>
</html>
